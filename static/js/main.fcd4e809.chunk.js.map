{"version":3,"sources":["redux/reducer.js","redux/constant.js","components/Calculator.component.jsx","redux/action.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","value","expression","btns","isValidInput","console","log","calculatorReducer","state","action","type","ADD_ELEM","text","DEL_ELEM","slice","CLEAR_ELEM","EQUAL","eval","error","alert","Calculator","this","props","addElem","delElem","clearElem","equal","className","map","item","index","onClick","bind","key","Component","connect","dispatch","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"6aAEMA,cAAgB,CAClBC,MAAO,EACPC,WAAY,GACZC,KAAM,CACF,IACA,IACA,QACA,SACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAIR,SAASC,aAAaH,GAQlB,OAPAI,QAAQC,IAAI,iBAAkBL,IAOvB,EAGX,IAAMM,kBAAoB,SAApBA,oBAAwD,IAAnCC,MAAkC,uDAA1BR,cAAeS,OAAW,uCACzD,OAAQA,OAAOC,MACX,KAAKC,yCACD,OAAO,uWACAH,OADP,IAEIP,MAAuB,IAAhBO,MAAMP,MAAcQ,OAAOG,KAAOJ,MAAMP,MAAQQ,OAAOG,OAGtE,KAAKC,yCACD,OAAO,uWACAL,OADP,IAEIP,MAAOQ,OAAOR,MAAMa,MAAM,GAAI,KAGtC,KAAKC,yCACD,OAAO,uWACAP,OADP,IAEIP,MAAO,IAGf,KAAKe,yCACD,IACI,OAAO,uWACAR,OADP,IAEIP,MAAOgB,KAAKR,OAAOR,SAEzB,MAAOiB,OAEL,OADAC,MAAM,sCACC,uWACAX,OADP,IAEIP,MAAO,UAMnB,QACI,OAAOO,QAIJD,yC,mECjFf,wIAAO,IAAMI,EAAW,WACXE,EAAW,WACXG,EAAQ,QACRD,EAAa,c,iLCCpBK,E,uKACQ,IAAD,SACuDC,KAAKC,MAAzDrB,EADH,EACGA,MAAOE,EADV,EACUA,KAAMoB,EADhB,EACgBA,QAASC,EADzB,EACyBA,QAASC,EADlC,EACkCA,UAAWC,EAD7C,EAC6CA,MAClD,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,mBACX,2BAAOjB,KAAK,OAAOT,MAAOA,KAE9B,yBAAK0B,UAAU,qBAEPxB,EAAKyB,KAAI,SAACC,EAAMC,GACZ,MAAa,UAATD,EAEI,4BAAQE,QAASN,EAAUO,KAAK,GAAOC,IAAKH,GAAQD,GAExC,MAATA,EAEH,4BAAQE,QAASL,EAAMM,KAAK,EAAM/B,GAAQgC,IAAKH,GAAQD,GAE3C,WAATA,EAEH,4BAAQE,QAASP,EAAQQ,KAAK,EAAM/B,GAAQgC,IAAKH,GAAQD,GAIzD,4BAAQE,QAASR,EAAQS,KAAK,EAAMH,GAAOI,IAAKH,GAAQD,Y,GAzBnEK,aA4DVC,eAxBS,SAAC3B,GACrB,MAAO,CACHP,MAAOO,EAAMP,MACbE,KAAMK,EAAML,SAIO,SAACiC,GACxB,MAAO,CACHb,QAAS,SAACX,GACNwB,EChDW,SAACxB,GACtB,MAAO,CACLF,KAAMC,IACNC,QD6CiBW,CAAQX,KAErBY,QAAS,SAACvB,GACNmC,EC5CW,SAACnC,GACtB,MAAO,CACLS,KAAMG,IACNZ,SDyCiBuB,CAAQvB,KAErByB,MAAO,SAACzB,GACJmC,ECxCS,SAACnC,GACpB,MAAO,CACLS,KAAMM,IACNf,SDqCiByB,CAAMzB,KAEnBwB,UAAW,WACPW,ECnCH,CACL1B,KAAMK,UDuCKoB,CAA6Cf,G,eEvD7CiB,EALDC,YACV/B,IACAgC,OAAOC,8BAAgCD,OAAOC,gCCQnCC,MARf,WACE,OACE,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,QCGcK,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvC,GACLb,QAAQa,MAAMA,EAAMwC,c","file":"static/js/main.fcd4e809.chunk.js","sourcesContent":["import { ADD_ELEM, DEL_ELEM, EQUAL, CLEAR_ELEM } from \"./constant\";\r\n\r\nconst INITIAL_STATE = {\r\n    value: 0,\r\n    expression: \"\", // * || / || + || -\r\n    btns: [\r\n        \"(\",\r\n        \")\",\r\n        \"Clear\",\r\n        \"Delete\",\r\n        \"7\",\r\n        \"8\",\r\n        \"9\",\r\n        \"*\",\r\n        \"4\",\r\n        \"5\",\r\n        \"6\",\r\n        \"/\",\r\n        \"1\",\r\n        \"2\",\r\n        \"3\",\r\n        \"+\",\r\n        \".\",\r\n        \"0\",\r\n        \"=\",\r\n        \"-\",\r\n    ],\r\n};\r\n\r\nfunction isValidInput(value) {\r\n    console.log(\"isValidInput: \", value)\r\n\r\n    // if (expression === \"+\") {\r\n\r\n    // }\r\n\r\n\r\n    return false;\r\n}\r\n\r\nconst calculatorReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ADD_ELEM:\r\n            return {\r\n                ...state,\r\n                value: state.value === 0 ? action.text : state.value + action.text,\r\n            };\r\n\r\n        case DEL_ELEM:\r\n            return {\r\n                ...state,\r\n                value: action.value.slice(0, -1),\r\n            };\r\n\r\n        case CLEAR_ELEM:\r\n            return {\r\n                ...state,\r\n                value: 0,\r\n            };\r\n\r\n        case EQUAL: {\r\n            try {\r\n                return {\r\n                    ...state,\r\n                    value: eval(action.value),\r\n                };\r\n            } catch (error) {\r\n                alert('Tính cho cẩn thận nha')\r\n                return {\r\n                    ...state,\r\n                    value: 'ERROR',\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default calculatorReducer;\r\n","export const ADD_ELEM = \"ADD_ELEM\";\r\nexport const DEL_ELEM = \"DEL_ELEM\";\r\nexport const EQUAL = \"EQUAL\";\r\nexport const CLEAR_ELEM = \"CLEAR_ELEM\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addElem, delElem, clearElem, equal } from \"../redux/action\";\r\nclass Calculator extends Component {\r\n    render() {\r\n        const { value, btns, addElem, delElem, clearElem, equal } = this.props;\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"value-container\">\r\n                    <input type=\"text\" value={value} />\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                    {\r\n                        btns.map((item, index) => {\r\n                            if (item === \"Clear\") {\r\n                                return (\r\n                                    <button onClick={clearElem.bind(this)} key={index}>{item}</button>\r\n                                )\r\n                            } else if (item === \"=\") {\r\n                                return (\r\n                                    <button onClick={equal.bind(this, value)} key={index}>{item}</button>\r\n                                )\r\n                            } else if (item === \"Delete\") {\r\n                                return (\r\n                                    <button onClick={delElem.bind(this, value)} key={index}>{item}</button>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <button onClick={addElem.bind(this, item)} key={index}>{item}</button>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: state.value,\r\n        btns: state.btns,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addElem: (text) => {\r\n            dispatch(addElem(text));\r\n        },\r\n        delElem: (value) => {\r\n            dispatch(delElem(value));\r\n        },\r\n        equal: (value) => {\r\n            dispatch(equal(value));\r\n        },\r\n        clearElem: () => {\r\n            dispatch(clearElem());\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);\r\n","import { ADD_ELEM, DEL_ELEM, EQUAL, CLEAR_ELEM } from \"./constant\";\r\n\r\nexport const addElem = (text) => {\r\n  return {\r\n    type: ADD_ELEM,\r\n    text,\r\n  };\r\n};\r\n\r\nexport const delElem = (value) => {\r\n  return {\r\n    type: DEL_ELEM,\r\n    value,\r\n  };\r\n};\r\n\r\nexport const equal = (value) => {\r\n  return {\r\n    type: EQUAL,\r\n    value,\r\n  };\r\n};\r\n\r\nexport const clearElem = () => {\r\n  return {\r\n    type: CLEAR_ELEM,\r\n  };\r\n};\r\n","import { createStore } from \"redux\";\r\n\r\nimport calculatorReducer from \"./reducer\";\r\n\r\nconst store = createStore(\r\n    calculatorReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Calculator from \"./components/Calculator.component\";\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Calculator />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}